/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.table.DefaultTableModel;
import mastermind.Juego;

/**
 *
 * @author 2im3q
 */
public class VentanaAuto extends javax.swing.JFrame {

    public static int[] codigo;
    int[] intento = new int[4];
    ArrayList<Integer> pines = new ArrayList<Integer>();
    DefaultTableModel modelo;
    Juego juego;
    HashMap<Integer, Integer> check = new HashMap<Integer, Integer>(); // HashMap en el que se van guardando las respuestas del jugador.
    int attempts = 1;
    boolean ganador;

    public VentanaAuto(int[] codigo) {
        initComponents();
        modelo = (DefaultTableModel) jTable1.getModel();
        this.codigo = codigo;
        juego = new Juego(codigo);
        ganador = false;
    }

    public void nJuego() {
        int[][] intentos = new int[10][4];
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 4; j++) {
                intentos[i][j] = (int) (Math.random() * 8 + 1);
            }

        }
        while (attempts >= 1 && attempts <= 10 && ganador == false) {
            intento[0] = intentos[attempts - 1][0];
            intento[1] = intentos[attempts - 1][1];
            intento[2] = intentos[attempts - 1][2];
            intento[3] = intentos[attempts - 1][3];
            intenta();
            attempts += 1;
            System.out.println("todo bien" + String.valueOf(attempts));
        };
    }

    public void autoJuego() {
        intento[0] = 1;
        intento[1] = 2;
        intento[2] = 3;
        intento[3] = 4;
        attempts += 1;
        intenta();
        while (attempts > 1 && attempts <= 10 && ganador == false) {
            creaIntento();
            intenta();
            
            System.out.println("todo bien" + String.valueOf(attempts));
        };
    }
    public void creaIntento(){
        int aux[]=new int[4];
        for (int i = 0; i < aux.length; i++) {
            aux[i]=intento[i];
        }
        for (int i = 0; i < aux.length; i++) {
            intento[i]=juego.resuelve(aux,pines)[i];
        }
    }
    public void intenta() {

        if (attempts > 0 && attempts <= 10 && ganador == false) { // Se itera mientras el jugador aun tenga intentos disponibles.
            System.out.println("\n Intento: " + attempts);
            System.out.println("Escribe 4 numeros del 1 al 8::");
            check.put(1, intento[0]);
            check.put(2, intento[1]);
            check.put(3, intento[2]);
            check.put(4, intento[3]);

            System.out.println(check);

            pines = juego.comprobar(check, 1); //Llamada al metodo que comprueba la respuesta propuesta

            //convertimos los pines a strings "White", "Red" o ""
            String[] fichas = new String[4];
            for (int i = 0; i < pines.size(); i++) {
                if (pines.get(i) == 1) {
                    fichas[i] = "White";
                } else if (pines.get(i) == 2) {
                    fichas[i] = "Red";
                }

            }
            //agregamos una linea a la tabla, para ello creamos los pines

            modelo.addRow(new Object[]{attempts, intento[0], intento[1], intento[2], intento[3],
                fichas[0], fichas[1], fichas[2], fichas[3]});

            // Comprobacion para terminar el juego
            if (check.get(1) != juego.ans.get(1) || check.get(2) != juego.ans.get(2)
                    || check.get(3) != juego.ans.get(3) || check.get(4) != juego.ans.get(4)) {

                juego.newAttempt();

            } else {
                System.out.println("\nFELICIDADES, GANASTE!!");
                ganador = true;
                return;
            }

        }
        if (attempts == 10 && ganador == false) {
            System.out.println("\nPERDISTE :(");
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 204, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "N intento", "Digito 1", "Digito 2", "Digito 3", "Digito 4", "Pin 1", "Pin 2", "Pin 3", "Pin 4"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 558, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaAuto.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VentanaAuto(codigo).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
